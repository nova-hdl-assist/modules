{
	"inputtext" : ["<NAME>", "<RESET>", "<CLOCK>", "<ENABLE>", "<OUTPUT>"],
	"selects" : 
	[
    		{ "name" : "<EDGE_TYPE>", "options" : [ "rising_edge", "falling_edge"] }
	],
	"moduleName" : "Generic Counter",
	"moduleCode" : "library IEEE;\nuse IEEE.STD_LOGIC_1164.ALL;\nuse IEEE.STD_LOGIC_unsigned.ALL;\nuse IEEE.math_real.all;\nentity <NAME> is\n  Generic (pulses: integer:=4);\n    Port ( <CLOCK> : in  STD_LOGIC;\n           <RESET> : in  STD_LOGIC;\n           <ENABLE> : in STD_LOGIC;\n           <OUTPUT> : out  STD_LOGIC);\n              \nend <NAME>;\narchitecture Behavioral of <NAME> is\n    constant bits: integer:= integer(ceil(log2(real(pulses))));\n    signal counter: STD_LOGIC_VECTOR(bits downto 0);\nbegin\n    process(<CLOCK>,<RESET>)\n    begin\n        if <RESET> = '1' then\n            counter <= (others =>'0');\n        elsif <EDGE_TYPE>(<CLOCK>) then\n            if counter=(pulses) then\n                counter <= (others =>'0');\n            elsif <ENABLE>='1' then\n                counter <= counter +1;\n            end if;\n        end if;\n    end process;\n<OUTPUT> <= '1' when counter=(pulses) else '0';\nend Behavioral;"
}
