{
    "inputtext": [
        "<NAME>",
        "<RESET>",
        "<CLOCK>"
    ],
    "selects": [
        {
            "name": "<EDGE_TYPE>",
            "options": [
                "rising_edge",
                "falling_edge"
            ]
        }
    ],
    "autogenerate": "",
    "moduleName": "test",
    "moduleCode": "--Edge detection module that can be used for when using the board buttons. \n--Includes rising and fallingdetection.\n\nlibrary IEEE;\nuse IEEE.STD_LOGIC_1164.ALL;\nentity <NAME> is\n    Port (<RESET> : in  STD_LOGIC;\n          <CLOCK> : in  STD_LOGIC;\n          <INPUT> : in  STD_LOGIC;\n          Rising_out : out  STD_LOGIC;\n          Falling_out : out  STD_LOGIC);\nend <NAME>;\n\narchitecture Behavioral of <NAME> is\n\tsignal Q, Q_previous: std_logic;\nbegin\n\nprocess(<CLOCK>, <RESET>)\nbegin\n\tif <RESET>='1' then\n\t\tQ <='0';\n\t\tQ_previous <='0';\n\telsif <EDGE_TYPE>(<CLOCK>) then\n\t\tQ_previous <= Q;\n\t\tQ <= <INPUT>;\n\tend if;\nend process;\n\nFalling_out <= '1' when Q_previous='1' and Q='0' else '0';\nRising_out <= '1' when Q_previous='0' and Q='1' else '0';\n\nend Behavioral;"
}